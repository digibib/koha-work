[% USE Koha %]
<style type="text/css">
/*
 * CSS to draw overlay, dialog box and RFID table output
 */
.overlay    { position: fixed; top:0; left:0; width:100%; height: 100%; z-index:99;
              background-color:#000; background: rgba(0,0,0,0.8); /*pointer-events:none;*/ }

#RFIDStatus { clear: left; margin-left: 10px; }
#RFIDStatus .btn { margin-right: 10px; background-image: none; background-color: orange;}

#writeRFIDDialog {
  width: 430px; margin: 60px auto; padding: 60px 30px;
  background: #c9d0de; border: 1px solid #e1e1e1;
  border-radius: 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px;
  -moz-box-shadow: 0px 0px 8px #444;
  -webkit-box-shadow: 0px 0px 8px #444;
}

#writeRFIDDialog label {
  float: left; clear: left; margin: 11px 20px 0 0; width: 95px;
  text-align: right; font-size: 16px; color: #445668;
  text-transform: uppercase; text-shadow: 0px 1px 0px #f2f2f2;
}

#writeRFIDDialog input {
  width: 260px; height: 35px; padding: 5px 20px 0px 20px; margin: 0 0 20px 0;
  background: #5E768D;
  border-radius: 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px;
  -moz-box-shadow: 0px 1px 0px #f2f2f2;-webkit-box-shadow: 0px 1px 0px #f2f2f2;
  font-family: sans-serif; font-size: 16px; color: #f2f2f2; text-shadow: 0px -1px 0px #334f71;
}

#writeRFIDDialog a { float: right;}
#writeRFIDDialog input::-webkit-input-placeholder  {
      color: #a1b2c3; text-shadow: 0px -1px 0px #38506b;
}
#writeRFIDDialog input:-moz-placeholder {
      color: #a1b2c3; text-shadow: 0px -1px 0px #38506b;
}
</style>
<style type="text/css" media="print">
  body {
    visibility: hidden;
  }
  table {
    visibility: visible;
    position: absolute;
    left: 0;
    top: 0;
  }
  /* reset table for slip printing */
  table, tbody, tfoot, thead, tr, th, td {
    margin: 0;
    border: 0 !important;
    font-size: 8px !important;
  }
  /* display only columns 1-6 and 10 */
  th, td {
    display: none;
  }
  th:nth-of-type(n+1):nth-of-type(-n+2),th:nth-of-type(n+6) {
      display: table-cell;
  }
  td:nth-of-type(n+1):nth-of-type(-n+2),td:nth-of-type(n+6) {
      display: table-cell;
  }
</style>
<script type="text/javascript">
var rfidhuburl = "[% Koha.Preference( 'RFIDHubURL' ) %]";
/*
 * JavaScript to inject Table for RFID items
 * connects to rfid hub with Websocket
 * creates <div> with <table>
 * inserts table to #patronlists and adds highlighted items as they arrive from websocket
 */

$(document).ready(function() {
  ws=new WebSocket(rfidhuburl);
  state = $("body").attr("id");
  // activate RFID Modal
  $("#menu ul").append('<li><a href="#" onclick="activateWrite();">Preg RFID</a></li>');
  $("div.gradient").append('<div id="RFIDStatus"><a href="#" class="btn btn-small" onclick="reconnectHUB();">RFID</a><span id="RFIDStatusMessage"></span></div>');
  ws.onopen = function() {
    console.log("connected");

    ws.onmessage = function(resp) {
      var data = JSON.parse(resp.data);
      // Major Error handling
      if (data.RFIDError) { // RFIDhun cannot access RFID
        $('#RFIDStatus .btn').css("backgroundColor", "red");
        $('#RFIDStatusMessage').text("ERROR connecting to RFID, please press button or refresh Browser to try again!");
      } else if (data.SIPError) { // RFIDhub cannot access SIP Server
        $('#RFIDStatus .btn').css("backgroundColor", "red");
        $('#RFIDStatusMessage').text("ERROR connecting to SIP Server, please ask Zarathustra for help or refresh browser!");
      } else if (data.UserError) { // User initiated error
        $('#RFIDStatus .btn').css("backgroundColor", "red");
        $('#RFIDStatusMessage').text(data.ErrorMessage);
      } else {
        // Handle messages
        switch (data.Action) {
          case "CONNECT":
            console.log("Connected to RFIDhub");
            $('#RFIDStatus .btn').css("backgroundColor", "lightgreen");
            if (state == "circ_returns") {
              ws.send(JSON.stringify({Action: "CHECKIN"}));
            } else if (state == "circ_circulation") {
              ws.send(JSON.stringify({Action: "CHECKOUT", Patron: "[% borrower.cardnumber %]"})); 
            }
            break;
          case "DISCONNECT":
            console.log("Disconnected from RFIDhub");
            $('#RFIDStatus .btn').css("backgroundColor", "red");
            $('#RFIDStatusMessage').text("Disconnected from RFIDHub, please refresh Browser to try to reconnect!");
            break;
          case "CHECKIN":
            console.log(" <- "+resp.data);
            handleItem(data);
            break;
          case "CHECKOUT":
            console.log(" <- "+resp.data);
            handleItem(data);
            break;
          case "ITEM-INFO":
            console.log(" <- "+resp.data);
            if (data.Item.Unknown) { // Failed to Look up Item
              $('#itemStatusDiv').toggleClass('hidden', false);
              $('#itemStatus').text("Could not find Item with barcode: "+data.Item.Barcode);
              $('#itemStatus').attr("style", "background-color: pink");
            } else {
              displayItemInfo(data.Item)
            }
            break;
          case "WRITE":
            console.log(" <- "+resp.data);
            $('#itemStatusDiv').toggleClass('hidden', false);
            if (data.Item.WriteFailed || data.Item.TagCountFailed) { // Failed to Write
              $('#itemStatus').text("ERROR: "+data.Item.Status);
              $('#itemStatus').attr("style", "background-color: pink");
            } else {
              $('#itemStatus').text("SUCCESS writing tag!");
              $('#itemStatus').attr("style", "background-color: lightgreen");
            }
            break;
          }
      }
    }
  }
  ws.onclose = function() {
    console.log("disconnected");
    $('#RFIDStatus .btn').css("backgroundColor", "orange");
  }
  ws.onerror = function() {
    console.log("No connection to RFIDhub!");
    $('#RFIDStatus .btn').css("backgroundColor", "red");
    $('#RFIDStatusMessage').text("ERROR connecting to RFIDhub, please refresh Browser to try again!");
  }
});

function reconnectHUB() {
  window.location.reload();
}

function handleItem(msg) {
  
  var rfiddiv = getRfidDiv();

  // create table, headers and tbody if not exists
  if ($('#rfiditems').length == 0) {
    var table = $('<table/>', { id: 'rfiditems' });
    table.append('<thead>' +
      '<tr>' +
        '<th scope="col">Dato</th>' +
        '<th scope="col">Tittel</th>' +
        '<th scope="col">Forfatter</th>' +
        '<th scope="col">Lånt ut fra</th>' +
        '<th scope="col">Hyllesignatur</th>' +
        '<th scope="col">Strekkode</th>' +
        '<th scope="col">Beskjed</th>');
    table.append('<tbody/>');

    rfiddiv.append(table);
  }

  // create row
  var row = $('<tr>').attr('id', msg.Item.Barcode)
    .append('<td><span title="dato">'+msg.Item.Date+'</span></td>')
    .append('<td><strong>'+msg.Item.Label+'</strong></a></td>') 
    .append($('<td>'))
    .append($('<td>'))
    .append($('<td>'))
    .append('<td><a href="/cgi-bin/koha/catalogue/detail.pl?biblionumber='+
        msg.Item.Barcode+'&amp;type=intra">'+msg.Item.Barcode+'</a></td>')
    .append('<td>'+msg.Item.Status);

  // if row with id already exists: update - else prepend
  if($("#" + msg.Item.Barcode).length == 0) {
    rfiddiv.find('tbody').prepend(row);
  } else {
    rfiddiv.find($("#" + msg.Item.Barcode).closest('tr')).replaceWith(row);
  }

  // highlight according to success or failure
  if(msg.Item.TransactionFailed) {
    row.children('td').css("backgroundColor", "pink");
  } else if(msg.Item.AlarmOnFailed || msg.Item.AlarmOffFailed) {
    row.children('td').css("backgroundColor", "pink");
    row.append('<td><a href="#" class="btn btn-small" onclick="return retryAlarm();">Retry</a></td>');
  } else {
    row.children('td').effect("highlight", {color: "lightgreen"}, 3000);
  }
  // popup print dialog for transfers
  if(msg.Item.Transfer) {
    window.open('transfer-slip.pl?barcode='+msg.Item.Barcode+'&amp;branchcode='+msg.Item.Transfer+'&amp;op=slip', 'popup', 'width=600,height=400,resizable=1,toolbar=0,scrollbars=1,top');
  }
  
}

function retryAlarm() {
  if (state == "circ_returns") {
    ws.send(JSON.stringify({Action: "RETRY-ALARM-ON"}));
  } else if (state == "circ_circulation") {
    ws.send(JSON.stringify({Action: "RETRY-ALARM-OFF"}));
  }
}

/*
 * WRITE RFID 
 */
function activateWrite() {
  // End Scan session first and activate Write Modal Dialog
  ws.send(JSON.stringify({Action: "END" }));
  buildWriteRFIDModal();
  $("#writeRFIDModal").toggleClass('hidden', false);
}

function deactivateWrite() {
  // End Scan session first and activate Write Modal Dialog
  ws.send(JSON.stringify({Action: "CHECKOUT", Patron: "[% borrower.cardnumber %]" }));
  $("#writeRFIDModal").toggleClass('hidden', true);
  return true;
}

function buildWriteRFIDModal() {
  var writeRFIDModal = getWriteRFIDModal();
  writeRFIDModal.html('<div id="writeRFIDDialog">'+
  '<h3>Write RFID Tag</h3>'+
  '<label for="name">barcode:</label>'+
  '<input type="text" id="barcodeInput" placeholder="barcode here">'+
  '<div id="itemInfoDiv" class="hidden">'+
  '<label for="name">Label:</label>'+
  '<input type="text" id="itemLabel" disabled="disabled">'+
  '<label for="name">NumTags:</label>'+
  '<input type="number" id="itemTags">'+
  '</div>'+
  '<div id="itemStatusDiv" class="hidden">'+
  '<p id="itemStatus">&nbsp;</p>'+
  '</div>'+
  '<div id="writeRFIDButtons">'+
  '<a href="#" id="writeButton" class="hidden btn btn-small" onclick="return writeItem();">Preg brikker</a></div>'+
  '<a href="#" class="btn btn-small" onclick="return lookupItem();">Søk opp bok</a>'+
  '<a href="#" class="btn btn-small" onclick="return deactivateWrite();">Avslutt</a></div>');
}

function lookupItem() {
  // Request item info
  ws.send(JSON.stringify({Action: "ITEM-INFO", Item: { Barcode: $('#barcodeInput').val() } }));
  return true;
}

function writeItem() {
  var msg = JSON.stringify({Action: "WRITE", Item: { Barcode: $('#barcodeInput').val(), NumTags: parseInt($('#itemTags').val()) } });
  console.log(msg);
  ws.send(msg);
  return true;
}

function displayItemInfo(item) {
  console.log(item);
  $("#itemLabel").attr("value", item.Label);
  $("#itemTags").attr("value", item.NumTags);
  $("#itemInfoDiv").toggleClass('hidden', false);
  $("#writeButton").toggleClass('hidden', false);
}

function getRfidDiv() {
  // Create div with id rfidlist if not exists
  if ($('#rfidlist').length == 0) {
    var rfiddiv = $('<div/>', {
      id: 'rfidlist',
      class: 'toptabs ui-tabs ui-widget ui-widget-content ui-corner-all'
    }).prependTo('#patronlists');
  } else {
    var rfiddiv = $('#rfidlist');
  }
  // Also add button to print entire list
  if ($('#printSlipButton').length == 0) {
    var printBtnDiv = $('<div/>', {id: 'printSlipButton'});
    printBtnDiv.append('<a href="#" class="btn btn-small" onclick="return window.print();">print</a>');
    rfiddiv.prepend(printBtnDiv);
  }

  return rfiddiv;
}

function getWriteRFIDModal() {
  // Create modal div with id writeRFIDModal if not exists
  if ($('#writeRFIDModal').length == 0) {
    var writeRFIDModal = $('<div/>', {
      id: 'writeRFIDModal',
      class: 'overlay'
    }).prependTo('#rfidlist');
  } else {
    var writeRFIDModal = $('#writeRFIDModal');
  }
  return writeRFIDModal;
}

</script>
